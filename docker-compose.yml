services:
  postgres-api-core:
    image: postgres:17
    hostname: skin
    ports:
      - "5433:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=skin
      - POSTGRES_PASSWORD=123456
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin-api-core:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "user@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "14549:80"
    depends_on:
      - skin
    networks:
      - app-network

  minio-api:
    hostname: minio-skin
    image: 'minio/minio:latest'
    container_name: minio
    restart: always
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data-skin:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
#
#  backend:
#    build:
#      context: 'C:/Users/blonded/PycharmProjects/api_desafio'
#      dockerfile: Dockerfile
#    container_name: django_app
#    restart: on-failure
#    volumes:
#      - C:/Users/blonded/PycharmProjects/api_desafio:/app
#    environment:
#      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
#    env_file:
#      - .env
#    command: [ "sh", "-c", "python manage.py migrate && python manage.py runserver 0.0.0.0:8000" ]
#    ports:
#      - "8000:8000"
#    networks:
#      - app-network